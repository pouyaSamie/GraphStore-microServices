name: dockercompose8995123243639753487
services:
  basket.api:
    build:
      context: D:\workspace\MicroServices.Net\DotNetMicroServices
      dockerfile: Basket.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: basketapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
  basketdb:
    image: redis:alpine
    networks:
      default: null
  catalog.api:
    build:
      context: D:\workspace\MicroServices.Net\DotNetMicroServices
      dockerfile: Catalog.API/Dockerfile
    container_name: catalogapi
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogDatabaseSettings:ConnectionString: mongodb://catalogdb:27017
    image: catalogapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8000"
      protocol: tcp
    volumes:
    - type: bind
      source: /.microsoft/usersecrets/
      target: /root/.microsoft/usersecrets
      bind:
        create_host_path: true
    - type: bind
      source: /.aspnet/https
      target: /root/.aspnet/https
      bind:
        create_host_path: true
  catalogdb:
    container_name: catalogdb
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: /site
      target: /data/db
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose8995123243639753487_default